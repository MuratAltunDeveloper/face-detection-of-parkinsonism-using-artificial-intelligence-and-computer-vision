{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMiZAqStM0uM2Eed98bwqAi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"xWdQ1MtSnanE","executionInfo":{"status":"ok","timestamp":1728836415619,"user_tz":-180,"elapsed":414,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"outputs":[],"source":[]},{"cell_type":"markdown","source":["GEREKLİLİKLER VE PARAMETRELER"],"metadata":{"id":"unHTUQSEnrUw"}},{"cell_type":"code","source":["!pip install --upgrade numpy\n","\n","!pip install -q py-feat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MOwoqVK8nbgk","executionInfo":{"status":"ok","timestamp":1728836430165,"user_tz":-180,"elapsed":14013,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"ab2d3358-157e-4348-ad1f-ee5e1864689f"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.23.5)\n","Collecting numpy\n","  Using cached numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n","Using cached numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.3 MB)\n","Installing collected packages: numpy\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.23.5\n","    Uninstalling numpy-1.23.5:\n","      Successfully uninstalled numpy-1.23.5\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","cudf-cu12 24.4.1 requires numpy<2.0a0,>=1.23, but you have numpy 2.1.2 which is incompatible.\n","cupy-cuda12x 12.2.0 requires numpy<1.27,>=1.20, but you have numpy 2.1.2 which is incompatible.\n","gensim 4.3.3 requires numpy<2.0,>=1.18.5, but you have numpy 2.1.2 which is incompatible.\n","ibis-framework 8.0.0 requires numpy<2,>=1, but you have numpy 2.1.2 which is incompatible.\n","nltools 0.5.1 requires numpy<1.24, but you have numpy 2.1.2 which is incompatible.\n","numba 0.60.0 requires numpy<2.1,>=1.22, but you have numpy 2.1.2 which is incompatible.\n","pandas 2.1.4 requires numpy<2,>=1.22.4; python_version < \"3.11\", but you have numpy 2.1.2 which is incompatible.\n","pytensor 2.25.4 requires numpy<2,>=1.17.0, but you have numpy 2.1.2 which is incompatible.\n","rmm-cu12 24.4.0 requires numpy<2.0a0,>=1.23, but you have numpy 2.1.2 which is incompatible.\n","tensorflow 2.17.0 requires numpy<2.0.0,>=1.23.5; python_version <= \"3.11\", but you have numpy 2.1.2 which is incompatible.\n","thinc 8.2.5 requires numpy<2.0.0,>=1.19.0; python_version >= \"3.9\", but you have numpy 2.1.2 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed numpy-2.1.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","albucore 0.0.16 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","albumentations 1.4.15 requires numpy>=1.24.4, but you have numpy 1.23.5 which is incompatible.\n","bigframes 1.17.0 requires numpy>=1.24.0, but you have numpy 1.23.5 which is incompatible.\n","chex 0.1.86 requires numpy>=1.24.1, but you have numpy 1.23.5 which is incompatible.\n","pandas-stubs 2.1.4.231227 requires numpy>=1.26.0; python_version < \"3.13\", but you have numpy 1.23.5 which is incompatible.\n","xarray 2024.9.0 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0m"]}]},{"cell_type":"code","source":["import os\n","from feat import Detector\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import drive"],"metadata":{"id":"yt5IUJFynbjD","executionInfo":{"status":"ok","timestamp":1728836430166,"user_tz":-180,"elapsed":4,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Google Drive'ı bağla\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aOn0ZSbhnbl3","executionInfo":{"status":"ok","timestamp":1728836452138,"user_tz":-180,"elapsed":21976,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"24d2b117-0b02-4784-a29c-2214f1f001a6"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Detector'ı yapılandır\n","detector = Detector(\n","    face_model=\"retinaface\",\n","    landmark_model=\"mobilefacenet\",\n","    au_model='xgb',\n","    emotion_model=\"resmasknet\",\n","    facepose_model=\"img2pose\",\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T2wxHXGcnbod","executionInfo":{"status":"ok","timestamp":1728836534071,"user_tz":-180,"elapsed":81936,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"ba532232-07d5-4fc2-8732-3d71c0faacc4"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 1786259/1786259 [00:00<00:00, 53023491.26it/s]\n","100%|██████████| 12281146/12281146 [00:00<00:00, 89521205.61it/s]\n","100%|██████████| 965545/965545 [00:00<00:00, 36065770.07it/s]\n","100%|██████████| 33635572/33635572 [00:01<00:00, 30793206.75it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 10188770.36it/s]\n","100%|██████████| 45886076/45886076 [00:00<00:00, 48626319.46it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 13247402.52it/s]\n","100%|██████████| 53851068/53851068 [00:01<00:00, 49870404.53it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 14278390.75it/s]\n","100%|██████████| 166975/166975 [00:00<00:00, 14045362.50it/s]\n","100%|██████████| 530776/530776 [00:00<00:00, 34793634.34it/s]\n","100%|██████████| 493515/493515 [00:00<00:00, 32493280.46it/s]\n","100%|██████████| 207163/207163 [00:00<00:00, 21888971.17it/s]\n","100%|██████████| 1151853/1151853 [00:00<00:00, 48721968.21it/s]\n","100%|██████████| 572282/572282 [00:00<00:00, 30083780.54it/s]\n","100%|██████████| 330487/330487 [00:00<00:00, 22564183.91it/s]\n","100%|██████████| 335449/335449 [00:00<00:00, 22701201.76it/s]\n","100%|██████████| 586893/586893 [00:00<00:00, 32646017.50it/s]\n","100%|██████████| 206931/206931 [00:00<00:00, 13703604.92it/s]\n","100%|██████████| 689547/689547 [00:00<00:00, 34946046.33it/s]\n","100%|██████████| 583629/583629 [00:00<00:00, 33281000.76it/s]\n","100%|██████████| 207077/207077 [00:00<00:00, 18499337.37it/s]\n","100%|██████████| 256865/256865 [00:00<00:00, 21493234.99it/s]\n","100%|██████████| 1079268/1079268 [00:00<00:00, 54580923.95it/s]\n","100%|██████████| 1952633/1952633 [00:00<00:00, 76277697.70it/s]\n","100%|██████████| 312240/312240 [00:00<00:00, 23616927.51it/s]\n","100%|██████████| 524139/524139 [00:00<00:00, 34253101.45it/s]\n","100%|██████████| 77744/77744 [00:00<00:00, 14752837.63it/s]\n","100%|██████████| 551634217/551634217 [00:16<00:00, 32588229.49it/s]\n","100%|██████████| 448/448 [00:00<00:00, 250439.58it/s]\n","100%|██████████| 944/944 [00:00<00:00, 2024244.88it/s]\n","100%|██████████| 169843940/169843940 [00:04<00:00, 36795464.41it/s]\n","100%|██████████| 176/176 [00:00<00:00, 149432.69it/s]\n","100%|██████████| 176/176 [00:00<00:00, 149493.22it/s]\n","100%|██████████| 111898327/111898327 [00:02<00:00, 40602582.13it/s]\n","/usr/local/lib/python3.10/dist-packages/feat/face_detectors/Retinaface/Retinaface_test.py:70: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  pretrained_dict = torch.load(\n","/usr/local/lib/python3.10/dist-packages/feat/detector.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  checkpoint = torch.load(\n","Downloading: \"https://download.pytorch.org/models/resnet18-f37072fd.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth\n","100%|██████████| 44.7M/44.7M [00:00<00:00, 139MB/s]\n","/usr/local/lib/python3.10/dist-packages/feat/facepose_detectors/img2pose/img2pose_test.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  checkpoint = torch.load(model_path, map_location=self.device)\n","/usr/local/lib/python3.10/dist-packages/feat/emo_detectors/ResMaskNet/resmasknet_test.py:718: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  torch.load(\n","/usr/local/lib/python3.10/dist-packages/feat/identity_detectors/facenet/facenet_model.py:275: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  torch.load(\n"]}]},{"cell_type":"markdown","source":["tüm DATASETİ ALMA"],"metadata":{"id":"ibxJc9ZqoAqZ"}},{"cell_type":"code","source":["# Video ana klasörü\n","folder_parkinsonpath = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head'\n","folder_healthypath = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head'\n","\n","# İzin verilen video dosya uzantıları\n","video_extensions = ['.mp4', '.avi', '.mkv', '.mov']\n","\n","# Klasördeki video dosyalarının yollarını listeleme\n","video_parkinsonspaths = [os.path.join(folder_parkinsonpath, file) for file in os.listdir(folder_parkinsonpath)\n","               if any(file.lower().endswith(ext) for ext in video_extensions)]\n","\n","video_healthypaths = [os.path.join(folder_healthypath, file) for file in os.listdir(folder_healthypath)\n","               if any(file.lower().endswith(ext) for ext in video_extensions)]\n","\n","# Sonuçları yazdır\n","for video_path in video_parkinsonspaths:\n","    print(video_path)\n","print(\"\\n**************** \\n\")\n","for video_path in video_healthypaths:\n","    print(video_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lc-9SJWKnbqy","executionInfo":{"status":"ok","timestamp":1728836535175,"user_tz":-180,"elapsed":1107,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"3e72ff87-698e-4f0b-e0fd-673d90ea72d0"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/ali-cebeci-durus-tekayak-1-trim-merged-2_vICXcgYD.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/bahtiyar-tegun-durus-tekayak-1-trim-merged_4M4vhIE0.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hanifi-saglam-durus-tekayak-1-trim-merged-3_MMpNTsmc.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/cihan-kurt-durus-tekayak-ata-trim-merged_8YDSW17r.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/ilknur-ustaoglu-durus-tekayak-2-trim-merged-3_gwzE0p7c.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hizir-canca-durus-tekayak-3-trim_o9kQzG1m.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/mehmet-eryigit-durus-tekayak-1-trim-merged_kzLuULsa.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hatice-cebeci-durus-tekayak-trim-merged_IDGIqZaw.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/munip-ozcelik-durus-tekayak-1-trim-merged_Hjs6nKrM.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/rasim-pamuk-durus-tekayak-ata-trim-merged_qX1eqSBq.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/salih-zeki-yaman-durus-tekayak-ata-trim-merged-1_7TdJPPmX.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/turgut-kiraci-durus-tekayak-efe-trim-merged-1_EAjU78OV.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/sevli-okumus-durus-tekayak-1-trim_RKYEEnXU.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/yusuf-albayrak-durus-tekayak-8-trim-merged-1_mwGaCEIs.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/zeki-kahvecioglu-durus-tekayak-2-trim_saJBdXxx.mp4\n","\n","**************** \n","\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/canan-karaman-durus-tekayak-3-trim-merged-1_s9hUjGzM (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/ekrem-sarlayan-durus-tekayak-2-trim-merged-1_Trk5fdSv (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/faruk-tunca-durus-tekayak-3-trim-merged-1_ZkktaE85 (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/gullu-cakmakci-durus-tekayak-1-trim-merged-1_aDeFOjfX (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/halide-hale-ucar-durus-tekayak-2-trim-merged-1_RRKx3svS (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/kamuran-tan-durus-tekayak-1-trim-merged-1_ek1KUtpj (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/naci-sari-durus-tekayak-1-trim-merged_gJEQxmqd (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/necip-gursoy-durus-tekayak-4-trim-merged-2_lFmtSUpW (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/nermin-sari-durus-tekayak-1-trim-merged-1_9VJhuCmq (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/recep-bayhan-durus-tekayak-2-trim-merged-2_7uuOk1tL (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/samime-sever-durus-tekayak-1-trim-merged_sRSRlhDD (2).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/sebahat-gokgoz-durus-tekayak-1-trim-merged-2_yTT56cSw (2).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/selver-ozon-durus-tekayak-1-trim-merged-1_C9GX0qlh (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/semiha-yildiz-durus-tekayak-3-trim-merged-1_2dXiAMo8 (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/sahizer-balkan-durus-tekayak-trim-merged-3_a9UZ2MDK (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/yusuf-gokgoz-durus-tekayak-2-trim-merged-2_WEKqbzSA (1).mp4\n"]}]},{"cell_type":"markdown","source":["model OLUSTURMA"],"metadata":{"id":"wgi2hu5BoEWR"}},{"cell_type":"code","source":["au_columns = [\n","    'AU01', 'AU02',  'AU04',\n","    'AU06', 'AU07',  'AU09', 'AU10',\n","    'AU11', 'AU12', 'AU14', 'AU15',\n","     'AU17', 'AU20', 'AU24', 'AU25',\n","    'AU26', 'AU28', 'AU43'\n","\n","]\n","\n","#!!!  Yüz Kaslarının Aktivasyon Oranları  formülü\n","au_new_ft1=[\n","    'AU02',  # Dış Kaş Kaldırıcı (Frontalis - lateral)\n","\n","\n","    'AU06',  # Yanak Kaldırıcı (Orbicularis Oculi - orbital)\n","    'AU07',  # Kapak Sıkılaştırıcı (Orbicularis Oculi - palpebral)\n","    'AU09',  # Burun Kırışıklığı (Levator Labii Superioris Alaeque Nasi)\n","    'AU11',\n","    'AU12',  # Dudak Köşe Çektirmesi (Zygomaticus majör)\n","    'AU15',  # Dudak Köşe Bastırıcı (Depresör Anguli Oris)\n","    'AU20',  # Dudak Sedyesi (Risorius, Platysma)\n","\n","    'AU25',  # Dudak Kısmı (Depresör Labii inferioris)\n","    'AU26',  # Çene Düşmesi (Masseter, Temporalis)\n","\n","]\n","\n","def process_video(video_path):\n","    predictions = detector.detect_video(video_path, skip_frames=15)\n","\n","    # AU'ların ortalamalarını döndür\n","    au_data = predictions[au_columns]\n","    return au_data.mean().to_frame().T  # DataFrame olarak döndür\n","\n","def process_video2(data):\n","    # Belirtilen AU'ları al\n","    selected_aus = data[au_new_ft1]\n","\n","    # Her bir sütundaki değerleri topla\n","    au_sum = selected_aus.sum(axis=1)  # Satır bazında topla\n","\n","    # Sütun sayısına böl ve karekökünü al\n","    num_aus = len(au_new_ft1)  # AU sütun sayısı (örneğin 12)\n","    au_std = (au_sum / num_aus).pow(0.5)  # Böl ve karekök al\n","\n","    # Sonucu DataFrame olarak döndür\n","    au_std = au_std.to_frame().T  # DataFrame'e çevir ve transpoze et\n","    return au_std\n","\n","\n","\n"],"metadata":{"id":"VleXRcF2nbtG","executionInfo":{"status":"ok","timestamp":1728836535175,"user_tz":-180,"elapsed":2,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Parkinson ve sağlıklı hastalar için AU ortalamalarını ve durumlarını kaydetme\n","results = []\n","\n","for video_path in video_parkinsonspaths[0:5]:\n","    au_means = process_video(video_path)\n","    au_means['label'] = 1  # Parkinson hastası\n","    au_std = process_video2(au_means)  # Standart sapmayı al\n","\n","    au_means['std'] = au_std # Sadece ilk satırı al ve ekle\n","    print(au_means)\n","    results.append(au_means)\n","\n","for video_path in video_healthypaths[0:5]:\n","    au_means = process_video(video_path)\n","    au_means['label'] = 0  # Sağlıklı birey\n","    au_std = process_video2(au_means)  # Standart sapmayı al\n","\n","    au_means['std'] = au_std # Sadece ilk satırı al ve ekle\n","\n","    results.append(au_means)\n","\n","# Sonuçları DataFrame'e dönüştür\n","df_results = pd.concat(results, ignore_index=True)  # Sonuçları birleştir"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uGxvRpV9nbvp","executionInfo":{"status":"ok","timestamp":1728838389936,"user_tz":-180,"elapsed":1854763,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"9339b948-3cb6-44cc-a201-d0c48d62e8a4"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 28/28 [02:51<00:00,  6.13s/it]\n"]},{"output_type":"stream","name":"stdout","text":["       AU01      AU02      AU04      AU06      AU07     AU09      AU10  \\\n","0  0.739341  0.389137  0.208726  0.235911  0.178571  0.18054  0.497187   \n","\n","       AU11      AU12      AU14      AU15      AU17  AU20      AU24      AU25  \\\n","0  0.357143  0.285332  0.614467  0.605957  0.511721   0.0  0.740831  0.157398   \n","\n","       AU26      AU28      AU43  label       std  \n","0  0.236311  0.559193  0.032876      1  0.512474  \n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 36/36 [03:37<00:00,  6.05s/it]\n"]},{"output_type":"stream","name":"stdout","text":["       AU01      AU02      AU04      AU06      AU07      AU09      AU10  \\\n","0  0.499197  0.314272  0.414992  0.100573  0.277778  0.177886  0.200564   \n","\n","       AU11      AU12      AU14     AU15      AU17  AU20      AU24      AU25  \\\n","0  0.055556  0.074413  0.399878  0.84606  0.700497   0.0  0.813216  0.037465   \n","\n","      AU26      AU28      AU43  label       std  \n","0  0.30108  0.505913  0.232744      1  0.467449  \n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 29/29 [02:52<00:00,  5.95s/it]\n"]},{"output_type":"stream","name":"stdout","text":["       AU01      AU02      AU04      AU06      AU07      AU09     AU10  \\\n","0  0.500346  0.401333  0.182679  0.176695  0.172414  0.282696  0.10418   \n","\n","       AU11      AU12      AU14      AU15      AU17      AU20      AU24  \\\n","0  0.310345  0.127619  0.305301  0.443148  0.541886  0.103448  0.393868   \n","\n","       AU25      AU26      AU28      AU43  label       std  \n","0  0.273472  0.269145  0.134857  0.090683      1  0.505996  \n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 28/28 [02:47<00:00,  5.98s/it]\n"]},{"output_type":"stream","name":"stdout","text":["       AU01      AU02      AU04    AU06  AU07      AU09      AU10      AU11  \\\n","0  0.501183  0.481879  0.328815  0.0757   0.0  0.079603  0.025416  0.428571   \n","\n","       AU12      AU14      AU15     AU17  AU20      AU24      AU25      AU26  \\\n","0  0.029614  0.138195  0.509361  0.50999   0.0  0.239559  0.170774  0.252513   \n","\n","       AU28      AU43  label       std  \n","0  0.158884  0.025655      1  0.450335  \n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 29/29 [02:59<00:00,  6.18s/it]\n"]},{"output_type":"stream","name":"stdout","text":["       AU01      AU02    AU04      AU06      AU07      AU09      AU10  \\\n","0  0.550788  0.479675  0.2201  0.092165  0.413793  0.087647  0.087752   \n","\n","       AU11      AU12      AU14      AU15     AU17  AU20      AU24      AU25  \\\n","0  0.413793  0.024356  0.254074  0.660808  0.60962   0.0  0.601923  0.128425   \n","\n","       AU26      AU28      AU43  label      std  \n","0  0.161976  0.448302  0.058112      1  0.49625  \n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 30/30 [03:09<00:00,  6.30s/it]\n","100%|██████████| 39/39 [04:07<00:00,  6.35s/it]\n","100%|██████████| 15/15 [01:34<00:00,  6.32s/it]\n","  9%|▉         | 3/33 [00:18<02:54,  5.81s/it]WARNING:root:Warning: NO FACE is detected\n","100%|██████████| 33/33 [03:24<00:00,  6.20s/it]\n","/usr/local/lib/python3.10/dist-packages/feat/detector.py:981: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.\n","  batch_output = pd.concat(batch_output)\n","100%|██████████| 32/32 [03:22<00:00,  6.32s/it]\n"]}]},{"cell_type":"code","source":["# Excel dosyasına kaydet\n","output_excel_path = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/au_means_results.xlsx'\n","df_results.to_excel(output_excel_path, index=False)\n","\n","print(f\"Sonuçlar {output_excel_path} dosyasına kaydedildi.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0NuV6k1lnbyF","executionInfo":{"status":"ok","timestamp":1728838391030,"user_tz":-180,"elapsed":1103,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"9c241528-ef60-4d6d-c260-d6e712da4d4a"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Sonuçlar /content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/au_means_results.xlsx dosyasına kaydedildi.\n"]}]},{"cell_type":"code","source":["print(type(df_results))\n","print(\"+++++++++++++\")\n","df_results.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"nGfUA3ebnb1F","executionInfo":{"status":"ok","timestamp":1728839339387,"user_tz":-180,"elapsed":406,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"2034316f-847a-4151-94ba-809b68507696"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'feat.data.Fex'>\n","+++++++++++++\n"]},{"output_type":"execute_result","data":{"text/plain":["       AU01      AU02      AU04      AU06      AU07      AU09      AU10  \\\n","0  0.739341  0.389137  0.208726  0.235911  0.178571  0.180540  0.497187   \n","1  0.499197  0.314272  0.414992  0.100573  0.277778  0.177886  0.200564   \n","2  0.500346  0.401333  0.182679  0.176695  0.172414  0.282696  0.104180   \n","3  0.501183  0.481879  0.328815  0.075700  0.000000  0.079603  0.025416   \n","4  0.550788  0.479675  0.220100  0.092165  0.413793  0.087647  0.087752   \n","5  0.349971  0.234788  0.401915  0.292964  0.533333  0.194647  0.565399   \n","6  0.579360  0.378077  0.188389  0.216182  0.102564  0.173448  0.187470   \n","7  0.246578  0.413705  0.315750  0.203713  0.133333  0.136195  0.512699   \n","8  0.692006  0.691865  0.270379  0.146683  0.250000  0.135504  0.216174   \n","9  0.369770  0.318027  0.323446  0.358457  0.500000  0.382097  0.353721   \n","\n","       AU11      AU12      AU14      AU15      AU17      AU20      AU24  \\\n","0  0.357143  0.285332  0.614467  0.605957  0.511721  0.000000  0.740831   \n","1  0.055556  0.074413  0.399878  0.846060  0.700497  0.000000  0.813216   \n","2  0.310345  0.127619  0.305301  0.443148  0.541886  0.103448  0.393868   \n","3  0.428571  0.029614  0.138195  0.509361  0.509990  0.000000  0.239559   \n","4  0.413793  0.024356  0.254074  0.660808  0.609620  0.000000  0.601923   \n","5  1.000000  0.355828  0.501694  0.819485  0.728470  0.000000  0.632704   \n","6  0.948718  0.182375  0.484061  0.472873  0.706336  0.025641  0.676184   \n","7  0.400000  0.070748  0.458055  0.671518  0.748616  0.000000  0.748825   \n","8  0.812500  0.094855  0.219054  0.520832  0.584626  0.000000  0.529177   \n","9  0.750000  0.097370  0.412819  0.585022  0.746439  0.000000  0.697096   \n","\n","       AU25      AU26      AU28      AU43  label       std  \n","0  0.157398  0.236311  0.559193  0.032876      1  0.512474  \n","1  0.037465  0.301080  0.505913  0.232744      1  0.467449  \n","2  0.273472  0.269145  0.134857  0.090683      1  0.505996  \n","3  0.170774  0.252513  0.158884  0.025655      1  0.450335  \n","4  0.128425  0.161976  0.448302  0.058112      1  0.496250  \n","5  0.026671  0.269984  0.568705  0.151332      0  0.610549  \n","6  0.050876  0.123844  0.283960  0.063232      0  0.517165  \n","7  0.016390  0.102008  0.352413  0.037445      0  0.463423  \n","8  0.133787  0.166269  0.293426  0.067908      0  0.543350  \n","9  0.074588  0.142786  0.196863  0.045024      0  0.566423  "],"text/html":["\n","  <div id=\"df-238a31e0-71cb-4e8c-9023-54ef2729422f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AU01</th>\n","      <th>AU02</th>\n","      <th>AU04</th>\n","      <th>AU06</th>\n","      <th>AU07</th>\n","      <th>AU09</th>\n","      <th>AU10</th>\n","      <th>AU11</th>\n","      <th>AU12</th>\n","      <th>AU14</th>\n","      <th>AU15</th>\n","      <th>AU17</th>\n","      <th>AU20</th>\n","      <th>AU24</th>\n","      <th>AU25</th>\n","      <th>AU26</th>\n","      <th>AU28</th>\n","      <th>AU43</th>\n","      <th>label</th>\n","      <th>std</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.739341</td>\n","      <td>0.389137</td>\n","      <td>0.208726</td>\n","      <td>0.235911</td>\n","      <td>0.178571</td>\n","      <td>0.180540</td>\n","      <td>0.497187</td>\n","      <td>0.357143</td>\n","      <td>0.285332</td>\n","      <td>0.614467</td>\n","      <td>0.605957</td>\n","      <td>0.511721</td>\n","      <td>0.000000</td>\n","      <td>0.740831</td>\n","      <td>0.157398</td>\n","      <td>0.236311</td>\n","      <td>0.559193</td>\n","      <td>0.032876</td>\n","      <td>1</td>\n","      <td>0.512474</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.499197</td>\n","      <td>0.314272</td>\n","      <td>0.414992</td>\n","      <td>0.100573</td>\n","      <td>0.277778</td>\n","      <td>0.177886</td>\n","      <td>0.200564</td>\n","      <td>0.055556</td>\n","      <td>0.074413</td>\n","      <td>0.399878</td>\n","      <td>0.846060</td>\n","      <td>0.700497</td>\n","      <td>0.000000</td>\n","      <td>0.813216</td>\n","      <td>0.037465</td>\n","      <td>0.301080</td>\n","      <td>0.505913</td>\n","      <td>0.232744</td>\n","      <td>1</td>\n","      <td>0.467449</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.500346</td>\n","      <td>0.401333</td>\n","      <td>0.182679</td>\n","      <td>0.176695</td>\n","      <td>0.172414</td>\n","      <td>0.282696</td>\n","      <td>0.104180</td>\n","      <td>0.310345</td>\n","      <td>0.127619</td>\n","      <td>0.305301</td>\n","      <td>0.443148</td>\n","      <td>0.541886</td>\n","      <td>0.103448</td>\n","      <td>0.393868</td>\n","      <td>0.273472</td>\n","      <td>0.269145</td>\n","      <td>0.134857</td>\n","      <td>0.090683</td>\n","      <td>1</td>\n","      <td>0.505996</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.501183</td>\n","      <td>0.481879</td>\n","      <td>0.328815</td>\n","      <td>0.075700</td>\n","      <td>0.000000</td>\n","      <td>0.079603</td>\n","      <td>0.025416</td>\n","      <td>0.428571</td>\n","      <td>0.029614</td>\n","      <td>0.138195</td>\n","      <td>0.509361</td>\n","      <td>0.509990</td>\n","      <td>0.000000</td>\n","      <td>0.239559</td>\n","      <td>0.170774</td>\n","      <td>0.252513</td>\n","      <td>0.158884</td>\n","      <td>0.025655</td>\n","      <td>1</td>\n","      <td>0.450335</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.550788</td>\n","      <td>0.479675</td>\n","      <td>0.220100</td>\n","      <td>0.092165</td>\n","      <td>0.413793</td>\n","      <td>0.087647</td>\n","      <td>0.087752</td>\n","      <td>0.413793</td>\n","      <td>0.024356</td>\n","      <td>0.254074</td>\n","      <td>0.660808</td>\n","      <td>0.609620</td>\n","      <td>0.000000</td>\n","      <td>0.601923</td>\n","      <td>0.128425</td>\n","      <td>0.161976</td>\n","      <td>0.448302</td>\n","      <td>0.058112</td>\n","      <td>1</td>\n","      <td>0.496250</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.349971</td>\n","      <td>0.234788</td>\n","      <td>0.401915</td>\n","      <td>0.292964</td>\n","      <td>0.533333</td>\n","      <td>0.194647</td>\n","      <td>0.565399</td>\n","      <td>1.000000</td>\n","      <td>0.355828</td>\n","      <td>0.501694</td>\n","      <td>0.819485</td>\n","      <td>0.728470</td>\n","      <td>0.000000</td>\n","      <td>0.632704</td>\n","      <td>0.026671</td>\n","      <td>0.269984</td>\n","      <td>0.568705</td>\n","      <td>0.151332</td>\n","      <td>0</td>\n","      <td>0.610549</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.579360</td>\n","      <td>0.378077</td>\n","      <td>0.188389</td>\n","      <td>0.216182</td>\n","      <td>0.102564</td>\n","      <td>0.173448</td>\n","      <td>0.187470</td>\n","      <td>0.948718</td>\n","      <td>0.182375</td>\n","      <td>0.484061</td>\n","      <td>0.472873</td>\n","      <td>0.706336</td>\n","      <td>0.025641</td>\n","      <td>0.676184</td>\n","      <td>0.050876</td>\n","      <td>0.123844</td>\n","      <td>0.283960</td>\n","      <td>0.063232</td>\n","      <td>0</td>\n","      <td>0.517165</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.246578</td>\n","      <td>0.413705</td>\n","      <td>0.315750</td>\n","      <td>0.203713</td>\n","      <td>0.133333</td>\n","      <td>0.136195</td>\n","      <td>0.512699</td>\n","      <td>0.400000</td>\n","      <td>0.070748</td>\n","      <td>0.458055</td>\n","      <td>0.671518</td>\n","      <td>0.748616</td>\n","      <td>0.000000</td>\n","      <td>0.748825</td>\n","      <td>0.016390</td>\n","      <td>0.102008</td>\n","      <td>0.352413</td>\n","      <td>0.037445</td>\n","      <td>0</td>\n","      <td>0.463423</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.692006</td>\n","      <td>0.691865</td>\n","      <td>0.270379</td>\n","      <td>0.146683</td>\n","      <td>0.250000</td>\n","      <td>0.135504</td>\n","      <td>0.216174</td>\n","      <td>0.812500</td>\n","      <td>0.094855</td>\n","      <td>0.219054</td>\n","      <td>0.520832</td>\n","      <td>0.584626</td>\n","      <td>0.000000</td>\n","      <td>0.529177</td>\n","      <td>0.133787</td>\n","      <td>0.166269</td>\n","      <td>0.293426</td>\n","      <td>0.067908</td>\n","      <td>0</td>\n","      <td>0.543350</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.369770</td>\n","      <td>0.318027</td>\n","      <td>0.323446</td>\n","      <td>0.358457</td>\n","      <td>0.500000</td>\n","      <td>0.382097</td>\n","      <td>0.353721</td>\n","      <td>0.750000</td>\n","      <td>0.097370</td>\n","      <td>0.412819</td>\n","      <td>0.585022</td>\n","      <td>0.746439</td>\n","      <td>0.000000</td>\n","      <td>0.697096</td>\n","      <td>0.074588</td>\n","      <td>0.142786</td>\n","      <td>0.196863</td>\n","      <td>0.045024</td>\n","      <td>0</td>\n","      <td>0.566423</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-238a31e0-71cb-4e8c-9023-54ef2729422f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-238a31e0-71cb-4e8c-9023-54ef2729422f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-238a31e0-71cb-4e8c-9023-54ef2729422f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96f84d5d-2cc8-4be8-bd31-55980608bab6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96f84d5d-2cc8-4be8-bd31-55980608bab6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96f84d5d-2cc8-4be8-bd31-55980608bab6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_results","summary":"{\n  \"name\": \"df_results\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"AU01\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.6920060515403748,\n          0.4991965889930725,\n          0.3499709963798523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU02\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.6918650269508362,\n          0.3142722249031067,\n          0.2347879558801651\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU04\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.2703787684440613,\n          0.41499191522598267,\n          0.4019148051738739\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU06\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.1466834545135498,\n          0.10057274252176285,\n          0.29296427965164185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU07\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.25,\n          0.2777777910232544,\n          0.5333333611488342\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU09\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.13550390303134918,\n          0.17788571119308472,\n          0.1946466863155365\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU10\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.21617437899112701,\n          0.20056389272212982,\n          0.5653992891311646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU11\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.8125,\n          0.0555555559694767,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU12\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.09485487639904022,\n          0.07441254705190659,\n          0.35582754015922546\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU14\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.21905408799648285,\n          0.3998779058456421,\n          0.50169438123703\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU15\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.5208317041397095,\n          0.8460598587989807,\n          0.8194853067398071\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU17\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.584626317024231,\n          0.7004967927932739,\n          0.7284700274467468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU20\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          0.1034482792019844,\n          0.025641025975346565\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU24\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.5291767120361328,\n          0.8132159113883972,\n          0.6327041387557983\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU25\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.1337873786687851,\n          0.03746500238776207,\n          0.02667054906487465\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU26\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.16626881062984467,\n          0.3010803461074829,\n          0.26998433470726013\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU28\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.2934257686138153,\n          0.5059129595756531,\n          0.5687047839164734\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AU43\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.06790819019079208,\n          0.23274411261081696,\n          0.1513323038816452\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.5433502793312073,\n          0.46744856238365173\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Korelasyon matrisini hesapla\n","correlation_matrix = df_results.corr()\n","\n","# Label ile olan korelasyonları seç\n","label_correlation = correlation_matrix['label'].drop('label')\n","\n","# Korelasyonları çiz\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x=label_correlation.index, y=label_correlation.values)\n","plt.title('AU Özelliklerinin Label ile Korelasyonu')\n","plt.xlabel('Affect Units (AU)')\n","plt.ylabel('Korelasyon')\n","plt.xticks(rotation=45)\n","plt.axhline(0, color='gray', lw=1)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"uyIvwR_Snb77","executionInfo":{"status":"ok","timestamp":1728838391691,"user_tz":-180,"elapsed":663,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"e577721d-d1c6-4df0-ec95-f3538c9ed4e0"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["LABEL BAZLI KORELASYON"],"metadata":{"id":"kedsnN6G9Zgk"}},{"cell_type":"code","source":["\n","# Label 0 ve 1 için ayrı veri çerçeveleri oluştur\n","df_label_0 = df_results[df_results['label'] == 0]\n","df_label_1 = df_results[df_results['label'] == 1]\n","\n","# Yeterli veri olup olmadığını kontrol et\n","if len(df_label_0) < 2 or len(df_label_1) < 2:\n","    print(\"Yeterli veri yok. Her label için en az iki örnek olmalıdır.\")\n","else:\n","    # Her bir grup için korelasyon matrisini hesapla\n","    correlation_label_0 = df_label_0.corr().drop('label').loc[:, 'label']\n","    correlation_label_1 = df_label_1.corr().drop('label').loc[:, 'label']\n","\n","    # Korelasyon DataFrame'ini oluştur\n","    correlation_df = pd.DataFrame({\n","        'Label 0': correlation_label_0,\n","        'Label 1': correlation_label_1\n","    }).reset_index()\n","\n","    # Korelasyon DataFrame'ini ayarlayın\n","    correlation_df = correlation_df.set_index('index')\n","\n","    # Isı haritasını çiz\n","    plt.figure(figsize=(10, 6))\n","    sns.heatmap(correlation_df, annot=True, cmap='coolwarm', center=0, cbar_kws={'label': 'Korelasyon'})\n","    plt.title('AU Özelliklerinin Label 0 ve Label 1 ile Korelasyonu')\n","    plt.xlabel('Label')\n","    plt.ylabel('Affect Units (AU)')\n","    plt.xticks(rotation=45)\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":671},"id":"uSxV_iWBncAp","executionInfo":{"status":"ok","timestamp":1728841106829,"user_tz":-180,"elapsed":2122,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"74aa85e5-399c-4d68-f371-f93fbf98b1fb"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/seaborn/matrix.py:202: RuntimeWarning: All-NaN slice encountered\n","  vmin = np.nanmin(calc_data)\n","/usr/local/lib/python3.10/dist-packages/seaborn/matrix.py:207: RuntimeWarning: All-NaN slice encountered\n","  vmax = np.nanmax(calc_data)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"9dL-6IbincEp","executionInfo":{"status":"ok","timestamp":1728838391691,"user_tz":-180,"elapsed":4,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"uyTWTb9CncHo","executionInfo":{"status":"ok","timestamp":1728838391693,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"KeU0SyJ3ncKF","executionInfo":{"status":"ok","timestamp":1728838391693,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_eRGqVY7ncNR","executionInfo":{"status":"ok","timestamp":1728838391693,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zuUmVKmqncQB","executionInfo":{"status":"ok","timestamp":1728838391693,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iqi8Rqf8ncTT","executionInfo":{"status":"ok","timestamp":1728838392237,"user_tz":-180,"elapsed":549,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"7HoN5u-8nchy","executionInfo":{"status":"ok","timestamp":1728838392237,"user_tz":-180,"elapsed":4,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kBoqvb6Dnckr","executionInfo":{"status":"ok","timestamp":1728838392238,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"IE2rDuYgncnF","executionInfo":{"status":"ok","timestamp":1728838392238,"user_tz":-180,"elapsed":4,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":13,"outputs":[]}]}