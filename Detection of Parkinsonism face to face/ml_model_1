{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPSw/gq0AJj5AyhzunWwX9r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"PMl5H9EAoKXc"},"outputs":[],"source":["from google.colab import drive"]},{"cell_type":"code","source":["# Google Drive'ı bağla\n","drive.mount('/content/drive')\n","import pandas as pd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xqm6mH6WoP2o","executionInfo":{"status":"ok","timestamp":1729020617971,"user_tz":-180,"elapsed":1995,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"49a1bba6-6c5b-414d-c568-e47f190f710e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["FİNAL DATA FRAME OKUMA"],"metadata":{"id":"dnpBlaHaoow1"}},{"cell_type":"code","source":["# CSV dosyasının yolu\n","file_path = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/finaldataset.csv'\n","\n","# DataFrame olarak oku\n","df = pd.read_csv(file_path)"],"metadata":{"id":"SjCdUN3EoP5M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# DataFrame'i rastgele karıştır\n","df_shuffled = df.sample(frac=1, random_state=42).reset_index(drop=True)\n","\n","# Sonuçları yazdır\n","print(\"Orijinal DataFrame:\")\n","print(df)\n","print(\"\\nKarıştırılmış DataFrame:\")\n","print(df_shuffled)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j6NjCE9RoP7r","executionInfo":{"status":"ok","timestamp":1729020617971,"user_tz":-180,"elapsed":4,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"d89d9741-058a-4f20-db27-53956a37f2c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Orijinal DataFrame:\n","        AU01      AU02      AU04      AU06      AU07      AU09      AU10  \\\n","0   0.613956  0.376773  0.160267  0.076739  0.008658  0.127961  0.028183   \n","1   0.496110  0.309275  0.418300  0.150475  0.357977  0.306570  0.033620   \n","2   0.442008  0.377151  0.287251  0.178847  0.383886  0.219628  0.433759   \n","3   0.599940  0.419045  0.461183  0.223651  0.670635  0.174342  0.277300   \n","4   0.508804  0.391148  0.431442  0.389692  0.669591  0.386889  0.554247   \n","5   0.391943  0.236801  0.259798  0.455574  0.250996  0.462374  0.264295   \n","6   0.686318  0.589592  0.302972  0.477210  0.682594  0.313494  0.733563   \n","7   0.776896  0.314543  0.627187  0.133684  0.581281  0.213150  0.270798   \n","8   0.348117  0.252135  0.423886  0.283506  0.644444  0.196653  0.525017   \n","9   0.571098  0.382296  0.192046  0.211724  0.199301  0.170530  0.210444   \n","10  0.239488  0.389096  0.316830  0.192954  0.144144  0.150036  0.522322   \n","11  0.677119  0.678709  0.287722  0.141453  0.168067  0.136406  0.182452   \n","12  0.371601  0.321141  0.310659  0.358165  0.634454  0.395407  0.370018   \n","13  0.564689  0.416800  0.395420  0.233605  0.176471  0.443420  0.217364   \n","14  0.358492  0.272446  0.485850  0.096461  0.044898  0.131693  0.301009   \n","15  0.475020  0.314688  0.433204  0.077250  0.123506  0.108577  0.029626   \n","16  0.738293  0.389413  0.231525  0.216693  0.126214  0.178899  0.522281   \n","17  0.512335  0.323519  0.421435  0.096714  0.330827  0.189334  0.214285   \n","18  0.507271  0.390975  0.187810  0.185457  0.157407  0.293513  0.093491   \n","19  0.496426  0.496677  0.294108  0.074793  0.000000  0.080024  0.021181   \n","20  0.545845  0.479240  0.221172  0.089919  0.342593  0.092107  0.096803   \n","21  0.640932  0.391258  0.294898  0.209641  0.442308  0.186483  0.316859   \n","22  0.564352  0.267012  0.614878  0.091540  0.013986  0.167584  0.083189   \n","23  0.300807  0.308086  0.463952  0.179427  0.705521  0.179809  0.530822   \n","24  0.390530  0.339239  0.340376  0.157905  0.131313  0.163323  0.066634   \n","25  0.413715  0.180147  0.631690  0.222704  0.090909  0.289689  0.189532   \n","26  0.391674  0.203304  0.736219  0.066706  0.142857  0.110075  0.019563   \n","27  0.552514  0.481640  0.215184  0.067918  0.000000  0.090257  0.035084   \n","28  0.550661  0.197408  0.419953  0.076951  0.053435  0.139716  0.097949   \n","29  0.682230  0.560531  0.368229  0.081859  0.000000  0.182188  0.137883   \n","30  0.482421  0.370368  0.317153  0.110888  0.130000  0.159486  0.210816   \n","\n","        AU11      AU12      AU14      AU15      AU17      AU24      AU25  \\\n","0   0.536797  0.027126  0.214618  0.368252  0.592869  0.590618  0.151242   \n","1   0.762646  0.035935  0.338932  0.558430  0.673296  0.693092  0.045259   \n","2   0.407583  0.158529  0.550976  0.703484  0.621316  0.654706  0.038000   \n","3   0.750000  0.191934  0.437943  0.857538  0.636277  0.628229  0.062260   \n","4   0.555556  0.413381  0.659776  0.764974  0.687947  0.755443  0.255300   \n","5   0.836653  0.493010  0.622015  0.473294  0.694265  0.725299  0.090799   \n","6   0.812287  0.592162  0.659363  0.584406  0.611243  0.714396  0.393654   \n","7   0.423645  0.059992  0.279823  0.723111  0.651929  0.503726  0.058848   \n","8   0.920000  0.357583  0.507396  0.825504  0.731772  0.637427  0.027033   \n","9   0.930070  0.191742  0.469633  0.459490  0.714248  0.684947  0.052177   \n","10  0.306306  0.076963  0.441507  0.623934  0.759585  0.755776  0.011782   \n","11  0.869748  0.094780  0.221917  0.511770  0.580037  0.523405  0.089083   \n","12  0.663866  0.098666  0.419810  0.587030  0.748100  0.698534  0.064698   \n","13  0.882353  0.114858  0.559601  0.830224  0.674215  0.613577  0.011134   \n","14  0.502041  0.037950  0.312844  0.601111  0.624706  0.672373  0.096903   \n","15  0.239044  0.022975  0.150538  0.707077  0.569034  0.538553  0.119531   \n","16  0.475728  0.232143  0.606474  0.582793  0.522637  0.737123  0.095095   \n","17  0.037594  0.066372  0.401727  0.839945  0.694302  0.826103  0.033695   \n","18  0.314815  0.137494  0.309976  0.454984  0.528322  0.393904  0.259486   \n","19  0.457143  0.031824  0.147893  0.524746  0.513636  0.248289  0.149809   \n","20  0.435185  0.023220  0.243467  0.675737  0.611857  0.579836  0.151300   \n","21  0.403846  0.093957  0.207020  0.711554  0.502964  0.297673  0.200104   \n","22  0.468531  0.030671  0.210306  0.575486  0.476449  0.204061  0.929959   \n","23  0.496933  0.190135  0.577894  0.648829  0.566777  0.657871  0.329427   \n","24  0.353535  0.059835  0.257976  0.634255  0.602059  0.459012  0.167742   \n","25  0.772727  0.093536  0.393520  0.549341  0.560571  0.552023  0.304513   \n","26  0.687075  0.016682  0.130184  0.619930  0.562941  0.335330  0.189050   \n","27  1.000000  0.029307  0.155439  0.513903  0.600645  0.539356  0.070327   \n","28  0.259542  0.030983  0.325272  0.708598  0.556883  0.693823  0.201804   \n","29  0.615894  0.022797  0.204190  0.536974  0.469778  0.332437  0.467735   \n","30  0.230000  0.064631  0.388526  0.367054  0.412903  0.254225  0.860972   \n","\n","        AU26      AU28      AU43  label       std   hgh_cor  \n","0   0.138434  0.147895  0.037807      0  0.425674  0.362614  \n","1   0.214500  0.442100  0.587733      0  0.537849  0.343850  \n","2   0.259687  0.743574  0.144803      0  0.522187  0.289385  \n","3   0.248708  0.486286  0.120985      0  0.600173  0.376899  \n","4   0.363666  0.603972  0.441166      0  0.652939  0.384373  \n","5   0.121350  0.487485  0.194059      0  0.590642  0.284276  \n","6   0.424952  0.278989  0.372394      0  0.722154  0.490303  \n","7   0.179411  0.316947  0.223782      0  0.519850  0.391343  \n","8   0.253387  0.625671  0.148102      0  0.613208  0.221899  \n","9   0.129040  0.305741  0.053904      0  0.523150  0.391171  \n","10  0.114400  0.390989  0.036359      0  0.448287  0.180999  \n","11  0.167680  0.275354  0.063659      0  0.535360  0.354407  \n","12  0.144628  0.207094  0.046976      0  0.571669  0.259576  \n","13  0.077028  0.136020  0.564400      0  0.564437  0.346480  \n","14  0.130536  0.505101  0.115662      0  0.437497  0.241040  \n","15  0.178643  0.526379  0.074078      0  0.434890  0.255823  \n","16  0.233116  0.504048  0.029431      1  0.504927  0.544213  \n","17  0.281896  0.479924  0.240005      1  0.469030  0.423241  \n","18  0.266530  0.126368  0.088118      1  0.508039  0.199816  \n","19  0.250560  0.153799  0.025506      1  0.454486  0.123257  \n","20  0.147962  0.386458  0.066886      1  0.493686  0.316500  \n","21  0.235769  0.137924  0.062784      1  0.537973  0.190788  \n","22  0.384252  0.104503  0.180602      1  0.588259  0.115163  \n","23  0.515576  0.390141  0.097090      1  0.598188  0.197892  \n","24  0.286156  0.462560  0.043495      1  0.478885  0.179258  \n","25  0.316232  0.483430  0.416048      1  0.534066  0.228380  \n","26  0.302755  0.208057  0.066049      1  0.483574  0.131340  \n","27  0.101934  0.430870  0.065317      1  0.485313  0.298001  \n","28  0.457361  0.614024  0.177413      1  0.461064  0.382062  \n","29  0.324362  0.358110  0.052383      1  0.528426  0.226799  \n","30  0.812007  0.224109  0.086359      1  0.611997  0.122643  \n","\n","Karıştırılmış DataFrame:\n","        AU01      AU02      AU04      AU06      AU07      AU09      AU10  \\\n","0   0.552514  0.481640  0.215184  0.067918  0.000000  0.090257  0.035084   \n","1   0.475020  0.314688  0.433204  0.077250  0.123506  0.108577  0.029626   \n","2   0.300807  0.308086  0.463952  0.179427  0.705521  0.179809  0.530822   \n","3   0.512335  0.323519  0.421435  0.096714  0.330827  0.189334  0.214285   \n","4   0.348117  0.252135  0.423886  0.283506  0.644444  0.196653  0.525017   \n","5   0.571098  0.382296  0.192046  0.211724  0.199301  0.170530  0.210444   \n","6   0.682230  0.560531  0.368229  0.081859  0.000000  0.182188  0.137883   \n","7   0.390530  0.339239  0.340376  0.157905  0.131313  0.163323  0.066634   \n","8   0.371601  0.321141  0.310659  0.358165  0.634454  0.395407  0.370018   \n","9   0.613956  0.376773  0.160267  0.076739  0.008658  0.127961  0.028183   \n","10  0.508804  0.391148  0.431442  0.389692  0.669591  0.386889  0.554247   \n","11  0.738293  0.389413  0.231525  0.216693  0.126214  0.178899  0.522281   \n","12  0.391943  0.236801  0.259798  0.455574  0.250996  0.462374  0.264295   \n","13  0.564689  0.416800  0.395420  0.233605  0.176471  0.443420  0.217364   \n","14  0.677119  0.678709  0.287722  0.141453  0.168067  0.136406  0.182452   \n","15  0.564352  0.267012  0.614878  0.091540  0.013986  0.167584  0.083189   \n","16  0.496110  0.309275  0.418300  0.150475  0.357977  0.306570  0.033620   \n","17  0.442008  0.377151  0.287251  0.178847  0.383886  0.219628  0.433759   \n","18  0.413715  0.180147  0.631690  0.222704  0.090909  0.289689  0.189532   \n","19  0.599940  0.419045  0.461183  0.223651  0.670635  0.174342  0.277300   \n","20  0.640932  0.391258  0.294898  0.209641  0.442308  0.186483  0.316859   \n","21  0.391674  0.203304  0.736219  0.066706  0.142857  0.110075  0.019563   \n","22  0.507271  0.390975  0.187810  0.185457  0.157407  0.293513  0.093491   \n","23  0.482421  0.370368  0.317153  0.110888  0.130000  0.159486  0.210816   \n","24  0.545845  0.479240  0.221172  0.089919  0.342593  0.092107  0.096803   \n","25  0.776896  0.314543  0.627187  0.133684  0.581281  0.213150  0.270798   \n","26  0.239488  0.389096  0.316830  0.192954  0.144144  0.150036  0.522322   \n","27  0.358492  0.272446  0.485850  0.096461  0.044898  0.131693  0.301009   \n","28  0.550661  0.197408  0.419953  0.076951  0.053435  0.139716  0.097949   \n","29  0.496426  0.496677  0.294108  0.074793  0.000000  0.080024  0.021181   \n","30  0.686318  0.589592  0.302972  0.477210  0.682594  0.313494  0.733563   \n","\n","        AU11      AU12      AU14      AU15      AU17      AU24      AU25  \\\n","0   1.000000  0.029307  0.155439  0.513903  0.600645  0.539356  0.070327   \n","1   0.239044  0.022975  0.150538  0.707077  0.569034  0.538553  0.119531   \n","2   0.496933  0.190135  0.577894  0.648829  0.566777  0.657871  0.329427   \n","3   0.037594  0.066372  0.401727  0.839945  0.694302  0.826103  0.033695   \n","4   0.920000  0.357583  0.507396  0.825504  0.731772  0.637427  0.027033   \n","5   0.930070  0.191742  0.469633  0.459490  0.714248  0.684947  0.052177   \n","6   0.615894  0.022797  0.204190  0.536974  0.469778  0.332437  0.467735   \n","7   0.353535  0.059835  0.257976  0.634255  0.602059  0.459012  0.167742   \n","8   0.663866  0.098666  0.419810  0.587030  0.748100  0.698534  0.064698   \n","9   0.536797  0.027126  0.214618  0.368252  0.592869  0.590618  0.151242   \n","10  0.555556  0.413381  0.659776  0.764974  0.687947  0.755443  0.255300   \n","11  0.475728  0.232143  0.606474  0.582793  0.522637  0.737123  0.095095   \n","12  0.836653  0.493010  0.622015  0.473294  0.694265  0.725299  0.090799   \n","13  0.882353  0.114858  0.559601  0.830224  0.674215  0.613577  0.011134   \n","14  0.869748  0.094780  0.221917  0.511770  0.580037  0.523405  0.089083   \n","15  0.468531  0.030671  0.210306  0.575486  0.476449  0.204061  0.929959   \n","16  0.762646  0.035935  0.338932  0.558430  0.673296  0.693092  0.045259   \n","17  0.407583  0.158529  0.550976  0.703484  0.621316  0.654706  0.038000   \n","18  0.772727  0.093536  0.393520  0.549341  0.560571  0.552023  0.304513   \n","19  0.750000  0.191934  0.437943  0.857538  0.636277  0.628229  0.062260   \n","20  0.403846  0.093957  0.207020  0.711554  0.502964  0.297673  0.200104   \n","21  0.687075  0.016682  0.130184  0.619930  0.562941  0.335330  0.189050   \n","22  0.314815  0.137494  0.309976  0.454984  0.528322  0.393904  0.259486   \n","23  0.230000  0.064631  0.388526  0.367054  0.412903  0.254225  0.860972   \n","24  0.435185  0.023220  0.243467  0.675737  0.611857  0.579836  0.151300   \n","25  0.423645  0.059992  0.279823  0.723111  0.651929  0.503726  0.058848   \n","26  0.306306  0.076963  0.441507  0.623934  0.759585  0.755776  0.011782   \n","27  0.502041  0.037950  0.312844  0.601111  0.624706  0.672373  0.096903   \n","28  0.259542  0.030983  0.325272  0.708598  0.556883  0.693823  0.201804   \n","29  0.457143  0.031824  0.147893  0.524746  0.513636  0.248289  0.149809   \n","30  0.812287  0.592162  0.659363  0.584406  0.611243  0.714396  0.393654   \n","\n","        AU26      AU28      AU43  label       std   hgh_cor  \n","0   0.101934  0.430870  0.065317      1  0.485313  0.298001  \n","1   0.178643  0.526379  0.074078      0  0.434890  0.255823  \n","2   0.515576  0.390141  0.097090      1  0.598188  0.197892  \n","3   0.281896  0.479924  0.240005      1  0.469030  0.423241  \n","4   0.253387  0.625671  0.148102      0  0.613208  0.221899  \n","5   0.129040  0.305741  0.053904      0  0.523150  0.391171  \n","6   0.324362  0.358110  0.052383      1  0.528426  0.226799  \n","7   0.286156  0.462560  0.043495      1  0.478885  0.179258  \n","8   0.144628  0.207094  0.046976      0  0.571669  0.259576  \n","9   0.138434  0.147895  0.037807      0  0.425674  0.362614  \n","10  0.363666  0.603972  0.441166      0  0.652939  0.384373  \n","11  0.233116  0.504048  0.029431      1  0.504927  0.544213  \n","12  0.121350  0.487485  0.194059      0  0.590642  0.284276  \n","13  0.077028  0.136020  0.564400      0  0.564437  0.346480  \n","14  0.167680  0.275354  0.063659      0  0.535360  0.354407  \n","15  0.384252  0.104503  0.180602      1  0.588259  0.115163  \n","16  0.214500  0.442100  0.587733      0  0.537849  0.343850  \n","17  0.259687  0.743574  0.144803      0  0.522187  0.289385  \n","18  0.316232  0.483430  0.416048      1  0.534066  0.228380  \n","19  0.248708  0.486286  0.120985      0  0.600173  0.376899  \n","20  0.235769  0.137924  0.062784      1  0.537973  0.190788  \n","21  0.302755  0.208057  0.066049      1  0.483574  0.131340  \n","22  0.266530  0.126368  0.088118      1  0.508039  0.199816  \n","23  0.812007  0.224109  0.086359      1  0.611997  0.122643  \n","24  0.147962  0.386458  0.066886      1  0.493686  0.316500  \n","25  0.179411  0.316947  0.223782      0  0.519850  0.391343  \n","26  0.114400  0.390989  0.036359      0  0.448287  0.180999  \n","27  0.130536  0.505101  0.115662      0  0.437497  0.241040  \n","28  0.457361  0.614024  0.177413      1  0.461064  0.382062  \n","29  0.250560  0.153799  0.025506      1  0.454486  0.123257  \n","30  0.424952  0.278989  0.372394      0  0.722154  0.490303  \n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"Dr3oUDgioP-I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["gerekli kütüphaneler"],"metadata":{"id":"Ojbc5CzYp2Hn"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from xgboost import XGBClassifier\n","from sklearn.model_selection import RandomizedSearchCV\n"],"metadata":{"id":"M9KMhCQrp44Z"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Veri setini bölme"],"metadata":{"id":"PYtFczqWpFfE"}},{"cell_type":"code","source":["\n","# X ve y'yi ayırdım\n","X = df_shuffled.drop(columns=['label'])\n","y = df_shuffled['label']\n","\n","# Train-test split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"id":"vXwd5b-boQA9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Hiperparametre optimizasyonu ve model oluşturma"],"metadata":{"id":"J1nGcnOMqB9h"}},{"cell_type":"code","source":["\n","# XGBoost sınıflandırıcısını tanımlayın\n","xgb_model = XGBClassifier(use_label_encoder=False, eval_metric='logloss')\n","\n","# Hiperparametre optimizasyonu için parametre aralığı tanımlayın\n","param_dist = {\n","    'n_estimators': [100, 200, 300],\n","    'max_depth': [3, 5, 7, 9],\n","    'learning_rate': [0.01, 0.1, 0.2],\n","    'subsample': [0.6, 0.8, 1.0],\n","    'colsample_bytree': [0.6, 0.8, 1.0]\n","}"],"metadata":{"id":"Z3EX0mU4oQDV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# RandomizedSearchCV kullanarak hiperparametre optimizasyonu\n","random_search = RandomizedSearchCV(xgb_model, param_distributions=param_dist,\n","                                   n_iter=50, scoring='accuracy',\n","                                   cv=3, random_state=42, n_jobs=-1)\n","\n","# Modeli eğit\n","random_search.fit(X_train, y_train)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":208},"id":"aIoggSgVoQFt","executionInfo":{"status":"ok","timestamp":1729020628278,"user_tz":-180,"elapsed":10309,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"34b761e0-d55a-4bad-b6b5-7bd177fafea3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/xgboost/core.py:158: UserWarning: [19:30:27] WARNING: /workspace/src/learner.cc:740: \n","Parameters: { \"use_label_encoder\" } are not used.\n","\n","  warnings.warn(smsg, UserWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric='logloss',\n","                                           feature_types=None, gamma=None,\n","                                           grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning...\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   n_iter=50, n_jobs=-1,\n","                   param_distributions={'colsample_bytree': [0.6, 0.8, 1.0],\n","                                        'learning_rate': [0.01, 0.1, 0.2],\n","                                        'max_depth': [3, 5, 7, 9],\n","                                        'n_estimators': [100, 200, 300],\n","                                        'subsample': [0.6, 0.8, 1.0]},\n","                   random_state=42, scoring='accuracy')"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric=&#x27;logloss&#x27;,\n","                                           feature_types=None, gamma=None,\n","                                           grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning...\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   n_iter=50, n_jobs=-1,\n","                   param_distributions={&#x27;colsample_bytree&#x27;: [0.6, 0.8, 1.0],\n","                                        &#x27;learning_rate&#x27;: [0.01, 0.1, 0.2],\n","                                        &#x27;max_depth&#x27;: [3, 5, 7, 9],\n","                                        &#x27;n_estimators&#x27;: [100, 200, 300],\n","                                        &#x27;subsample&#x27;: [0.6, 0.8, 1.0]},\n","                   random_state=42, scoring=&#x27;accuracy&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomizedSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.RandomizedSearchCV.html\">?<span>Documentation for RandomizedSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric=&#x27;logloss&#x27;,\n","                                           feature_types=None, gamma=None,\n","                                           grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning...\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   n_iter=50, n_jobs=-1,\n","                   param_distributions={&#x27;colsample_bytree&#x27;: [0.6, 0.8, 1.0],\n","                                        &#x27;learning_rate&#x27;: [0.01, 0.1, 0.2],\n","                                        &#x27;max_depth&#x27;: [3, 5, 7, 9],\n","                                        &#x27;n_estimators&#x27;: [100, 200, 300],\n","                                        &#x27;subsample&#x27;: [0.6, 0.8, 1.0]},\n","                   random_state=42, scoring=&#x27;accuracy&#x27;)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: XGBClassifier</label><div class=\"sk-toggleable__content fitted\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n","              feature_types=None, gamma=None, grow_policy=None,\n","              importance_type=None, interaction_constraints=None,\n","              learning_rate=0.01, max_bin=None, max_cat_threshold=None,\n","              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,\n","              max_leaves=None, min_child_weight=None, missing=nan,\n","              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n","              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">XGBClassifier</label><div class=\"sk-toggleable__content fitted\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n","              feature_types=None, gamma=None, grow_policy=None,\n","              importance_type=None, interaction_constraints=None,\n","              learning_rate=0.01, max_bin=None, max_cat_threshold=None,\n","              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,\n","              max_leaves=None, min_child_weight=None, missing=nan,\n","              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n","              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre></div> </div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["\n","# En iyi parametreleri yazdır\n","print(\"En iyi parametreler:\", random_search.best_params_)\n","\n","# En iyi modeli kullanarak tahmin yap\n","best_model = random_search.best_estimator_\n","y_pred = best_model.predict(X_test)\n","\n","# Sınıflandırma raporunu yazdır\n","print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wBmillWaoQIU","executionInfo":{"status":"ok","timestamp":1729020628278,"user_tz":-180,"elapsed":5,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"333e1f79-29b1-42dc-aebf-fdbcf418388f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["En iyi parametreler: {'subsample': 1.0, 'n_estimators': 100, 'max_depth': 9, 'learning_rate': 0.01, 'colsample_bytree': 0.8}\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.50      0.67         4\n","           1       0.60      1.00      0.75         3\n","\n","    accuracy                           0.71         7\n","   macro avg       0.80      0.75      0.71         7\n","weighted avg       0.83      0.71      0.70         7\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n","import matplotlib.pyplot as plt\n","# Karışıklık matrisini oluştur\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Karışıklık matrisini çizdir\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=best_model.classes_)\n","disp.plot(cmap='Blues')\n","plt.title('Karışıklık Matrisi')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"jpfdEDORoQK5","executionInfo":{"status":"ok","timestamp":1729020698723,"user_tz":-180,"elapsed":786,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"4e793685-c5fd-423f-97e0-6b3dd22916e4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"Bboynjh_oQNs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"m_81P5JyoQP1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"cfyEOhm1oQSW"},"execution_count":null,"outputs":[]}]}