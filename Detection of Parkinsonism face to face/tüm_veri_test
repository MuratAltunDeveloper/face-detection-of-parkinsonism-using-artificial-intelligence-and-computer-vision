{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOjgqqfKvI3zucX67dT2Cuw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"g7-LlGE3aS8b"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["GEREKLİLİKLER VE PARAMETRELER"],"metadata":{"id":"71qcfKltaUaR"}},{"cell_type":"code","source":["!pip install --upgrade numpy\n","\n","!pip install -q py-feat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KE0Ex_MhaTU9","executionInfo":{"status":"ok","timestamp":1728798471957,"user_tz":-180,"elapsed":40908,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"42f72e17-50a4-4c7a-ecb4-be0a4c67aeee"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.26.4)\n","Collecting numpy\n","  Downloading numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.9/60.9 kB\u001b[0m \u001b[31m738.7 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading numpy-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.3/16.3 MB\u001b[0m \u001b[31m35.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: numpy\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.26.4\n","    Uninstalling numpy-1.26.4:\n","      Successfully uninstalled numpy-1.26.4\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","cudf-cu12 24.6.1 requires numpy<2.0a0,>=1.23, but you have numpy 2.1.2 which is incompatible.\n","cupy-cuda12x 12.2.0 requires numpy<1.27,>=1.20, but you have numpy 2.1.2 which is incompatible.\n","gensim 4.3.3 requires numpy<2.0,>=1.18.5, but you have numpy 2.1.2 which is incompatible.\n","numba 0.60.0 requires numpy<2.1,>=1.22, but you have numpy 2.1.2 which is incompatible.\n","pytensor 2.25.5 requires numpy<2,>=1.17.0, but you have numpy 2.1.2 which is incompatible.\n","rmm-cu12 24.6.0 requires numpy<2.0a0,>=1.23, but you have numpy 2.1.2 which is incompatible.\n","tensorflow 2.17.0 requires numpy<2.0.0,>=1.23.5; python_version <= \"3.11\", but you have numpy 2.1.2 which is incompatible.\n","thinc 8.2.5 requires numpy<2.0.0,>=1.19.0; python_version >= \"3.9\", but you have numpy 2.1.2 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed numpy-2.1.2\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.1/10.1 MB\u001b[0m \u001b[31m40.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m33.1/33.1 MB\u001b[0m \u001b[31m12.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.3/3.3 MB\u001b[0m \u001b[31m36.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m381.4/381.4 kB\u001b[0m \u001b[31m17.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.1/17.1 MB\u001b[0m \u001b[31m42.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.5/4.5 MB\u001b[0m \u001b[31m47.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m833.3/833.3 kB\u001b[0m \u001b[31m27.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m38.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.4/10.4 MB\u001b[0m \u001b[31m49.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","albucore 0.0.16 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","albumentations 1.4.15 requires numpy>=1.24.4, but you have numpy 1.23.5 which is incompatible.\n","bigframes 1.21.0 requires numpy>=1.24.0, but you have numpy 1.23.5 which is incompatible.\n","chex 0.1.87 requires numpy>=1.24.1, but you have numpy 1.23.5 which is incompatible.\n","jax 0.4.33 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","jaxlib 0.4.33 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\n","xarray 2024.9.0 requires numpy>=1.24, but you have numpy 1.23.5 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0m"]}]},{"cell_type":"code","source":["import os\n","from feat import Detector\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import drive"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1oXFmfIeaTXg","executionInfo":{"status":"ok","timestamp":1728798495069,"user_tz":-180,"elapsed":12512,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"5574c488-4c20-45cc-dfe3-23f921184199"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/kornia/feature/lightglue.py:44: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.\n","  @torch.cuda.amp.custom_fwd(cast_inputs=torch.float32)\n"]}]},{"cell_type":"code","source":["# Google Drive'ı bağla\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3dMH16OwaTZ8","executionInfo":{"status":"ok","timestamp":1728798514733,"user_tz":-180,"elapsed":19667,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"ab205b47-e768-4d5b-d02c-9d48eb32fea1"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Detector'ı yapılandır\n","detector = Detector(\n","    face_model=\"retinaface\",\n","    landmark_model=\"mobilefacenet\",\n","    au_model='xgb',\n","    emotion_model=\"resmasknet\",\n","    facepose_model=\"img2pose\",\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XV7PVp_UaTck","executionInfo":{"status":"ok","timestamp":1728798547177,"user_tz":-180,"elapsed":32448,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"97d4f4ed-f952-4b4c-8156-1511aa795d64"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 1786259/1786259 [00:00<00:00, 25110479.31it/s]\n","100%|██████████| 12281146/12281146 [00:00<00:00, 90453877.01it/s]\n","100%|██████████| 965545/965545 [00:00<00:00, 14520057.57it/s]\n","100%|██████████| 33635572/33635572 [00:00<00:00, 88333019.76it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 5489922.95it/s]\n","100%|██████████| 45886076/45886076 [00:00<00:00, 58858421.57it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 6280679.86it/s]\n","100%|██████████| 53851068/53851068 [00:00<00:00, 166893200.38it/s]\n","100%|██████████| 130263/130263 [00:00<00:00, 5399853.94it/s]\n","100%|██████████| 166975/166975 [00:00<00:00, 5569822.49it/s]\n","100%|██████████| 530776/530776 [00:00<00:00, 11826142.78it/s]\n","100%|██████████| 493515/493515 [00:00<00:00, 11209591.40it/s]\n","100%|██████████| 207163/207163 [00:00<00:00, 6350666.93it/s]\n","100%|██████████| 1151853/1151853 [00:00<00:00, 19180571.96it/s]\n","100%|██████████| 572282/572282 [00:00<00:00, 12378358.76it/s]\n","100%|██████████| 330487/330487 [00:00<00:00, 7936941.06it/s]\n","100%|██████████| 335449/335449 [00:00<00:00, 8464280.84it/s]\n","100%|██████████| 586893/586893 [00:00<00:00, 11504721.13it/s]\n","100%|██████████| 206931/206931 [00:00<00:00, 6209179.44it/s]\n","100%|██████████| 689547/689547 [00:00<00:00, 12906171.31it/s]\n","100%|██████████| 583629/583629 [00:00<00:00, 11291288.39it/s]\n","100%|██████████| 207077/207077 [00:00<00:00, 5182490.15it/s]\n","100%|██████████| 256865/256865 [00:00<00:00, 6974938.32it/s]\n","100%|██████████| 1079268/1079268 [00:00<00:00, 17239549.28it/s]\n","100%|██████████| 1952633/1952633 [00:00<00:00, 29108492.72it/s]\n","100%|██████████| 312240/312240 [00:00<00:00, 8174914.52it/s]\n","100%|██████████| 524139/524139 [00:00<00:00, 11275283.01it/s]\n","100%|██████████| 77744/77744 [00:00<00:00, 4084551.13it/s]\n","100%|██████████| 551634217/551634217 [00:03<00:00, 179780483.13it/s]\n","100%|██████████| 448/448 [00:00<00:00, 263061.49it/s]\n","100%|██████████| 944/944 [00:00<00:00, 1146661.74it/s]\n","100%|██████████| 169843940/169843940 [00:00<00:00, 225067213.32it/s]\n","100%|██████████| 176/176 [00:00<00:00, 96660.67it/s]\n","100%|██████████| 176/176 [00:00<00:00, 103606.67it/s]\n","100%|██████████| 111898327/111898327 [00:00<00:00, 164604595.09it/s]\n","/usr/local/lib/python3.10/dist-packages/feat/face_detectors/Retinaface/Retinaface_test.py:70: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  pretrained_dict = torch.load(\n","/usr/local/lib/python3.10/dist-packages/feat/detector.py:238: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  checkpoint = torch.load(\n","Downloading: \"https://download.pytorch.org/models/resnet18-f37072fd.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth\n","100%|██████████| 44.7M/44.7M [00:00<00:00, 85.2MB/s]\n","/usr/local/lib/python3.10/dist-packages/feat/facepose_detectors/img2pose/img2pose_test.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  checkpoint = torch.load(model_path, map_location=self.device)\n","/usr/local/lib/python3.10/dist-packages/feat/emo_detectors/ResMaskNet/resmasknet_test.py:718: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  torch.load(\n","/usr/local/lib/python3.10/dist-packages/feat/identity_detectors/facenet/facenet_model.py:275: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  torch.load(\n"]}]},{"cell_type":"markdown","source":["tüm DATASETİ ALMA"],"metadata":{"id":"MClHQUjdawZe"}},{"cell_type":"code","source":["# Video ana klasörü\n","folder_parkinsonpath = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head'\n","folder_healthypath = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head'\n","\n","# İzin verilen video dosya uzantıları\n","video_extensions = ['.mp4', '.avi', '.mkv', '.mov']\n","\n","# Klasördeki video dosyalarının yollarını listeleme\n","video_parkinsonspaths = [os.path.join(folder_parkinsonpath, file) for file in os.listdir(folder_parkinsonpath)\n","               if any(file.lower().endswith(ext) for ext in video_extensions)]\n","\n","video_healthypaths = [os.path.join(folder_healthypath, file) for file in os.listdir(folder_healthypath)\n","               if any(file.lower().endswith(ext) for ext in video_extensions)]\n","\n","# Sonuçları yazdır\n","for video_path in video_parkinsonspaths:\n","    print(video_path)\n","print(\"\\n**************** \\n\")\n","for video_path in video_healthypaths:\n","    print(video_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JBT_jG1FaTfE","executionInfo":{"status":"ok","timestamp":1728798844951,"user_tz":-180,"elapsed":639,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"6381e011-4514-4be3-9644-72ad33a77f29"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/ali-cebeci-durus-tekayak-1-trim-merged-2_vICXcgYD.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/bahtiyar-tegun-durus-tekayak-1-trim-merged_4M4vhIE0.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hanifi-saglam-durus-tekayak-1-trim-merged-3_MMpNTsmc.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/cihan-kurt-durus-tekayak-ata-trim-merged_8YDSW17r.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/ilknur-ustaoglu-durus-tekayak-2-trim-merged-3_gwzE0p7c.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hizir-canca-durus-tekayak-3-trim_o9kQzG1m.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/mehmet-eryigit-durus-tekayak-1-trim-merged_kzLuULsa.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/hatice-cebeci-durus-tekayak-trim-merged_IDGIqZaw.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/munip-ozcelik-durus-tekayak-1-trim-merged_Hjs6nKrM.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/rasim-pamuk-durus-tekayak-ata-trim-merged_qX1eqSBq.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/salih-zeki-yaman-durus-tekayak-ata-trim-merged-1_7TdJPPmX.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/turgut-kiraci-durus-tekayak-efe-trim-merged-1_EAjU78OV.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/sevli-okumus-durus-tekayak-1-trim_RKYEEnXU.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/yusuf-albayrak-durus-tekayak-8-trim-merged-1_mwGaCEIs.mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/parkinsons_head/zeki-kahvecioglu-durus-tekayak-2-trim_saJBdXxx.mp4\n","\n","**************** \n","\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/canan-karaman-durus-tekayak-3-trim-merged-1_s9hUjGzM (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/ekrem-sarlayan-durus-tekayak-2-trim-merged-1_Trk5fdSv (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/faruk-tunca-durus-tekayak-3-trim-merged-1_ZkktaE85 (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/gullu-cakmakci-durus-tekayak-1-trim-merged-1_aDeFOjfX (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/halide-hale-ucar-durus-tekayak-2-trim-merged-1_RRKx3svS (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/kamuran-tan-durus-tekayak-1-trim-merged-1_ek1KUtpj (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/naci-sari-durus-tekayak-1-trim-merged_gJEQxmqd (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/necip-gursoy-durus-tekayak-4-trim-merged-2_lFmtSUpW (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/nermin-sari-durus-tekayak-1-trim-merged-1_9VJhuCmq (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/recep-bayhan-durus-tekayak-2-trim-merged-2_7uuOk1tL (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/samime-sever-durus-tekayak-1-trim-merged_sRSRlhDD (2).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/sebahat-gokgoz-durus-tekayak-1-trim-merged-2_yTT56cSw (2).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/selver-ozon-durus-tekayak-1-trim-merged-1_C9GX0qlh (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/semiha-yildiz-durus-tekayak-3-trim-merged-1_2dXiAMo8 (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/sahizer-balkan-durus-tekayak-trim-merged-3_a9UZ2MDK (1).mp4\n","/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/dataset/healthy_head/yusuf-gokgoz-durus-tekayak-2-trim-merged-2_WEKqbzSA (1).mp4\n"]}]},{"cell_type":"markdown","source":["model OLUSTURMA"],"metadata":{"id":"AKNZgJoNbDmO"}},{"cell_type":"code","source":["au_columns = [\n","    'AU01', 'AU02',  'AU04', 'AU05',\n","    'AU06', 'AU07',  'AU09', 'AU10',\n","    'AU11', 'AU12', 'AU14', 'AU15',\n","     'AU17', 'AU20','AU23', 'AU24', 'AU25',\n","    'AU26', 'AU28', 'AU43'\n","\n","]\n","\n","\n","def process_video(video_path):\n","    predictions = detector.detect_video(video_path, skip_frames=20)\n","\n","    au_data = predictions[au_columns]\n","    au_means = au_data.mean()\n","    return au_means"],"metadata":{"id":"lsIb341DaTjw","executionInfo":{"status":"ok","timestamp":1728798872594,"user_tz":-180,"elapsed":309,"user":{"displayName":"asistlab","userId":"04370448145332600114"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["\n","# Parkinson ve sağlıklı hastalar için AU ortalamalarını ve durumlarını kaydetme\n","results = []\n","\n","for video_path in video_parkinsonspaths[:2]:\n","    au_means = process_video(video_path)\n","    au_means['label'] = 1  # Parkinson hastası\n","    results.append(au_means)\n","\n","for video_path in video_healthypaths[0:2]:\n","    au_means = process_video(video_path)\n","    au_means['label'] = 0  # Sağlıklı birey\n","    results.append(au_means)\n","\n","# Sonuçları DataFrame'e dönüştür\n","df_results = pd.DataFrame(results)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ja8nNp3FaTmb","executionInfo":{"status":"ok","timestamp":1728799707180,"user_tz":-180,"elapsed":688399,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"d502ac7f-0370-4315-f652-de7a58c34d7b"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 21/21 [02:26<00:00,  6.97s/it]\n","100%|██████████| 27/27 [03:07<00:00,  6.94s/it]\n","100%|██████████| 23/23 [02:33<00:00,  6.67s/it]\n","100%|██████████| 29/29 [03:18<00:00,  6.83s/it]\n"]}]},{"cell_type":"code","source":["# Excel dosyasına kaydet\n","output_excel_path = '/content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/au_means_results.xlsx'\n","df_results.to_excel(output_excel_path, index=False)\n","\n","print(f\"Sonuçlar {output_excel_path} dosyasına kaydedildi.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BpoAqDqPaTpA","executionInfo":{"status":"ok","timestamp":1728799707622,"user_tz":-180,"elapsed":444,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"cb061d2e-634c-4711-f956-d3aeba7bd21a"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Sonuçlar /content/drive/MyDrive/ASISTLAB_ARTIFICAL/tubitak_2209/au_means_results.xlsx dosyasına kaydedildi.\n"]}]},{"cell_type":"code","source":["df_results.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"EbHa8-JRaTrw","executionInfo":{"status":"ok","timestamp":1728800882317,"user_tz":-180,"elapsed":298,"user":{"displayName":"asistlab","userId":"04370448145332600114"}},"outputId":"92be3f21-ed30-4e41-920e-a9c8d3f907c1"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       AU01      AU02      AU04      AU05      AU06      AU07      AU09  \\\n","0  0.736746  0.363839  0.233836  0.414693  0.215764  0.047619  0.171769   \n","1  0.516499  0.334428  0.433490  0.445514  0.097547  0.444444  0.183775   \n","2  0.336247  0.255848  0.414291  0.427268  0.278969  0.782609  0.188574   \n","3  0.569966  0.377860  0.200334  0.383380  0.224969  0.137931  0.176361   \n","\n","       AU10      AU11      AU12  ...      AU15      AU17      AU20      AU23  \\\n","0  0.497254  0.333333  0.209755  ...  0.564201  0.537776  0.000000  0.620855   \n","1  0.221951  0.074074  0.065612  ...  0.825919  0.686315  0.000000  0.526105   \n","2  0.446522  0.956522  0.338601  ...  0.803217  0.735516  0.000000  0.561787   \n","3  0.198532  0.965517  0.202363  ...  0.446051  0.712759  0.034483  0.531621   \n","\n","       AU24      AU25      AU26      AU28      AU43  label  \n","0  0.757697  0.062520  0.207125  0.559259  0.029984    1.0  \n","1  0.825393  0.054971  0.284607  0.485255  0.231866    1.0  \n","2  0.628595  0.030017  0.227437  0.618287  0.088120    0.0  \n","3  0.685615  0.084398  0.132867  0.302285  0.061792    0.0  \n","\n","[4 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-cf072768-f7e4-4e8f-84cb-f7060835dace\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AU01</th>\n","      <th>AU02</th>\n","      <th>AU04</th>\n","      <th>AU05</th>\n","      <th>AU06</th>\n","      <th>AU07</th>\n","      <th>AU09</th>\n","      <th>AU10</th>\n","      <th>AU11</th>\n","      <th>AU12</th>\n","      <th>...</th>\n","      <th>AU15</th>\n","      <th>AU17</th>\n","      <th>AU20</th>\n","      <th>AU23</th>\n","      <th>AU24</th>\n","      <th>AU25</th>\n","      <th>AU26</th>\n","      <th>AU28</th>\n","      <th>AU43</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.736746</td>\n","      <td>0.363839</td>\n","      <td>0.233836</td>\n","      <td>0.414693</td>\n","      <td>0.215764</td>\n","      <td>0.047619</td>\n","      <td>0.171769</td>\n","      <td>0.497254</td>\n","      <td>0.333333</td>\n","      <td>0.209755</td>\n","      <td>...</td>\n","      <td>0.564201</td>\n","      <td>0.537776</td>\n","      <td>0.000000</td>\n","      <td>0.620855</td>\n","      <td>0.757697</td>\n","      <td>0.062520</td>\n","      <td>0.207125</td>\n","      <td>0.559259</td>\n","      <td>0.029984</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.516499</td>\n","      <td>0.334428</td>\n","      <td>0.433490</td>\n","      <td>0.445514</td>\n","      <td>0.097547</td>\n","      <td>0.444444</td>\n","      <td>0.183775</td>\n","      <td>0.221951</td>\n","      <td>0.074074</td>\n","      <td>0.065612</td>\n","      <td>...</td>\n","      <td>0.825919</td>\n","      <td>0.686315</td>\n","      <td>0.000000</td>\n","      <td>0.526105</td>\n","      <td>0.825393</td>\n","      <td>0.054971</td>\n","      <td>0.284607</td>\n","      <td>0.485255</td>\n","      <td>0.231866</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.336247</td>\n","      <td>0.255848</td>\n","      <td>0.414291</td>\n","      <td>0.427268</td>\n","      <td>0.278969</td>\n","      <td>0.782609</td>\n","      <td>0.188574</td>\n","      <td>0.446522</td>\n","      <td>0.956522</td>\n","      <td>0.338601</td>\n","      <td>...</td>\n","      <td>0.803217</td>\n","      <td>0.735516</td>\n","      <td>0.000000</td>\n","      <td>0.561787</td>\n","      <td>0.628595</td>\n","      <td>0.030017</td>\n","      <td>0.227437</td>\n","      <td>0.618287</td>\n","      <td>0.088120</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.569966</td>\n","      <td>0.377860</td>\n","      <td>0.200334</td>\n","      <td>0.383380</td>\n","      <td>0.224969</td>\n","      <td>0.137931</td>\n","      <td>0.176361</td>\n","      <td>0.198532</td>\n","      <td>0.965517</td>\n","      <td>0.202363</td>\n","      <td>...</td>\n","      <td>0.446051</td>\n","      <td>0.712759</td>\n","      <td>0.034483</td>\n","      <td>0.531621</td>\n","      <td>0.685615</td>\n","      <td>0.084398</td>\n","      <td>0.132867</td>\n","      <td>0.302285</td>\n","      <td>0.061792</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf072768-f7e4-4e8f-84cb-f7060835dace')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf072768-f7e4-4e8f-84cb-f7060835dace button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf072768-f7e4-4e8f-84cb-f7060835dace');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5529d976-9810-43cc-8c77-424b285337d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5529d976-9810-43cc-8c77-424b285337d6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5529d976-9810-43cc-8c77-424b285337d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_results"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":[],"metadata":{"id":"rg1jfNhKaTuQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"n5BIFoalaTwz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"auj1JsrUaTzT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bltnIrxaaT10"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"13M5fhN4aT4E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"f7-I92VwaT6U"},"execution_count":null,"outputs":[]}]}